{"ast":null,"code":"var _jsxFileName = \"/workspaces/reportxpress-app/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport UserInputForm from './components/UserInputForm';\nimport Footer from './components/Footer';\nimport jsPDF from 'jspdf';\nimport { utils, writeFile } from 'xlsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as XLSX from 'xlsx';\nimport autoTable from 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [report, setReport] = useState(null);\n  const generateReport = async inputData => {\n    console.log(inputData);\n    const response = await fetch('https://elevatu.pythonanywhere.com/?input=' + inputData).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.text();\n    }).then(text => {\n      text = text.replace(/'/g, '\"');\n      const jsonObject = JSON.parse(text);\n      console.log(jsonObject);\n      previewReport(jsonObject);\n      exportAsExcel(jsonObject);\n      exportAsPDF(jsonObject);\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  };\n  const previewReport = jsonData => {\n    const doc = new jsPDF();\n    //doc.text('Report', 10, 10);\n    const columns = Object.keys(jsonData[0]).map(key => ({\n      header: key,\n      dataKey: key\n    }));\n    const rows = jsonData.map(item => {\n      const row = {};\n      Object.keys(item).forEach(key => {\n        row[key] = item[key];\n      });\n      return row;\n    });\n    autoTable(doc, {\n      head: [columns.map(col => col.header)],\n      body: rows,\n      columns\n    });\n    const pdfBlob = doc.output('blob');\n    const pdfUrl = URL.createObjectURL(pdfBlob);\n    window.open(pdfUrl, '_blank');\n  };\n  const formatDate = date => {\n    return date.toISOString().replace(/[-:.T]/g, '_').split('_')[0] + '_' + date.toTimeString().split(' ')[0].replace(/:/g, '_');\n  };\n  const now = new Date();\n  const formattedDate = formatDate(now);\n  const exportAsPDF = jsonData => {\n    const doc = new jsPDF();\n    //doc.text('Report', 10, 10);\n    const columns = Object.keys(jsonData[0]).map(key => ({\n      header: key,\n      dataKey: key\n    }));\n    const rows = jsonData.map(item => {\n      const row = {};\n      Object.keys(item).forEach(key => {\n        row[key] = item[key];\n      });\n      return row;\n    });\n    autoTable(doc, {\n      head: [columns.map(col => col.header)],\n      body: rows,\n      columns\n    });\n    doc.save('report' + formattedDate + '.pdf');\n  };\n  const exportAsExcel = jsonData => {\n    const ws = XLSX.utils.json_to_sheet(jsonData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n    XLSX.writeFile(wb, 'report' + formattedDate + '.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column min-vh-100\",\n    style: {\n      backgroundColor: '#AAD7D9'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ReportXpress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInputForm, {\n        onGenerate: generateReport,\n        onPreview: previewReport,\n        onExportPDF: exportAsPDF,\n        onExportExcel: exportAsExcel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), report && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generated Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: report\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9sXrEVMqNEWLjicNer4dTim2g1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UserInputForm","Footer","jsPDF","utils","writeFile","XLSX","autoTable","jsxDEV","_jsxDEV","App","_s","report","setReport","generateReport","inputData","console","log","response","fetch","then","ok","Error","text","replace","jsonObject","JSON","parse","previewReport","exportAsExcel","exportAsPDF","catch","error","jsonData","doc","columns","Object","keys","map","key","header","dataKey","rows","item","row","forEach","head","col","body","pdfBlob","output","pdfUrl","URL","createObjectURL","window","open","formatDate","date","toISOString","split","toTimeString","now","Date","formattedDate","save","ws","json_to_sheet","wb","book_new","book_append_sheet","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","onGenerate","onPreview","onExportPDF","onExportExcel","_c","$RefreshReg$"],"sources":["/workspaces/reportxpress-app/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport UserInputForm from './components/UserInputForm';\nimport Footer from './components/Footer';\nimport jsPDF from 'jspdf';\nimport { utils, writeFile } from 'xlsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as XLSX from 'xlsx';\nimport autoTable from 'jspdf-autotable';\n\n\nconst App = () => {\n  const [report, setReport] = useState(null);\n\n  const generateReport = async (inputData) => {\n      console.log(inputData);\n      const response = await fetch('https://elevatu.pythonanywhere.com/?input=' + inputData)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.text();\n      })\n      .then(text => {\n        text = text.replace(/'/g, '\"');\n        const jsonObject = JSON.parse(text);\n        console.log(jsonObject);\n        previewReport(jsonObject)\n        exportAsExcel(jsonObject);\n        exportAsPDF(jsonObject);\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n      });\n  };\n\n  const previewReport = (jsonData) => {\n    const doc = new jsPDF();\n    //doc.text('Report', 10, 10);\n    const columns = Object.keys(jsonData[0]).map(key => ({ header: key, dataKey: key }));\n    const rows = jsonData.map(item => {\n      const row = {};\n      Object.keys(item).forEach(key => {\n          row[key] = item[key];\n      });\n      return row;\n    });\n    autoTable(doc, {\n      head: [columns.map(col => col.header)],\n      body: rows,\n      columns,\n    });\n    const pdfBlob = doc.output('blob');\n    const pdfUrl = URL.createObjectURL(pdfBlob);\n\n    window.open(pdfUrl, '_blank');\n  };\n\n  const formatDate = (date) => {\n    return date.toISOString().replace(/[-:.T]/g, '_').split('_')[0] + '_' + date.toTimeString().split(' ')[0].replace(/:/g, '_');\n  };\n  const now = new Date();\n  const formattedDate = formatDate(now);\n\n  const exportAsPDF = (jsonData) => {\n    const doc = new jsPDF();\n    //doc.text('Report', 10, 10);\n    const columns = Object.keys(jsonData[0]).map(key => ({ header: key, dataKey: key }));\n    const rows = jsonData.map(item => {\n      const row = {};\n      Object.keys(item).forEach(key => {\n          row[key] = item[key];\n      });\n      return row;\n    });\n    autoTable(doc, {\n      head: [columns.map(col => col.header)],\n      body: rows,\n      columns,\n    });\n\n    doc.save('report' + formattedDate + '.pdf');\n  };\n\n  const exportAsExcel = (jsonData) => {\n    const ws = XLSX.utils.json_to_sheet(jsonData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    XLSX.writeFile(wb, 'report' + formattedDate + '.xlsx');\n  };\n\n  return (\n    <div className=\"d-flex flex-column min-vh-100\" style={{ backgroundColor: '#AAD7D9' }}>\n      <div className=\"container text-center py-5\">\n        <h1>ReportXpress</h1>\n        <UserInputForm\n          onGenerate={generateReport}\n          onPreview={previewReport}\n          onExportPDF={exportAsPDF}\n          onExportExcel={exportAsExcel}\n        />\n        {report && (\n          <div className=\"mt-4\">\n            <h2>Generated Report</h2>\n            <p>{report}</p>\n          </div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}