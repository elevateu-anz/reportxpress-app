{"ast":null,"code":"var _jsxFileName = \"/workspaces/reportxpress-app/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport UserInputForm from './components/UserInputForm';\nimport Footer from './components/Footer';\nimport jsPDF from 'jspdf';\nimport { utils, writeFile } from 'xlsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as XLSX from 'xlsx';\nimport autoTable from 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [report, setReport] = useState(null);\n  var jsonData = {};\n  const generateReport = async inputData => {\n    console.log(inputData);\n    const response = await fetch('https://elevatu.pythonanywhere.com/?input=' + inputData).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.text();\n    }).then(text => {\n      text = text.replace(/'/g, '\"');\n      jsonData = JSON.parse(text);\n      previewReport(jsonData);\n      const btn_preview = document.getElementById('btn_preview');\n      const btn_pdf = document.getElementById('btn_pdf');\n      const btn_xls = document.getElementById('btn_xls');\n      btn_preview.style.visibility = 'visible';\n      btn_preview.style.visibility = 'visible';\n    }).catch(error => {\n      console.error('There was a problem in generating report.', error);\n    });\n  };\n  const previewReport = () => {\n    const doc = new jsPDF();\n    const columns = Object.keys(jsonData[0]).map(key => ({\n      header: key,\n      dataKey: key\n    }));\n    const rows = jsonData.map(item => {\n      const row = {};\n      Object.keys(item).forEach(key => {\n        row[key] = item[key];\n      });\n      return row;\n    });\n    autoTable(doc, {\n      head: [columns.map(col => col.header)],\n      body: rows,\n      columns\n    });\n    const pdfBlob = doc.output('blob');\n    const pdfUrl = URL.createObjectURL(pdfBlob);\n    const popup = window.open(pdfUrl, '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\n    if (popup) {\n      popup.document.write('<html><head><title>Report Preview</title></head><body>');\n      popup.document.write('<iframe src=\"' + pdfUrl + '\" frameborder=\"0\" style=\"width:100%;height:100%;\"></iframe>');\n      popup.document.write('</body></html>');\n      popup.document.close(); // Important for IE\n    } else {\n      alert('Popup blocked. Please allow popups for this site.');\n    }\n  };\n  const formatDate = date => {\n    return date.toISOString().replace(/[-:.T]/g, '_').split('_')[0] + '_' + date.toTimeString().split(' ')[0].replace(/:/g, '_');\n  };\n  const now = new Date();\n  const formattedDate = formatDate(now);\n  const exportAsPDF = () => {\n    const doc = new jsPDF();\n    const columns = Object.keys(jsonData[0]).map(key => ({\n      header: key,\n      dataKey: key\n    }));\n    const rows = jsonData.map(item => {\n      const row = {};\n      Object.keys(item).forEach(key => {\n        row[key] = item[key];\n      });\n      return row;\n    });\n    autoTable(doc, {\n      head: [columns.map(col => col.header)],\n      body: rows,\n      columns\n    });\n    doc.save('report' + formattedDate + '.pdf');\n  };\n  const exportAsExcel = () => {\n    const ws = XLSX.utils.json_to_sheet(jsonData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n    XLSX.writeFile(wb, 'report' + formattedDate + '.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column min-vh-100\",\n    style: {\n      backgroundColor: '#AAD7D9'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"top-strip\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"stylish-heading\",\n        children: \"ReportXpress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Intelligent Self Service Resports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center py-5\",\n      children: [/*#__PURE__*/_jsxDEV(UserInputForm, {\n        onGenerate: generateReport,\n        onPreview: previewReport,\n        onExportPDF: exportAsPDF,\n        onExportExcel: exportAsExcel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), report && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generated Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: report\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9sXrEVMqNEWLjicNer4dTim2g1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UserInputForm","Footer","jsPDF","utils","writeFile","XLSX","autoTable","jsxDEV","_jsxDEV","App","_s","report","setReport","jsonData","generateReport","inputData","console","log","response","fetch","then","ok","Error","text","replace","JSON","parse","previewReport","btn_preview","document","getElementById","btn_pdf","btn_xls","style","visibility","catch","error","doc","columns","Object","keys","map","key","header","dataKey","rows","item","row","forEach","head","col","body","pdfBlob","output","pdfUrl","URL","createObjectURL","popup","window","open","write","close","alert","formatDate","date","toISOString","split","toTimeString","now","Date","formattedDate","exportAsPDF","save","exportAsExcel","ws","json_to_sheet","wb","book_new","book_append_sheet","className","backgroundColor","children","class","fileName","_jsxFileName","lineNumber","columnNumber","onGenerate","onPreview","onExportPDF","onExportExcel","_c","$RefreshReg$"],"sources":["/workspaces/reportxpress-app/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport UserInputForm from './components/UserInputForm';\nimport Footer from './components/Footer';\nimport jsPDF from 'jspdf';\nimport { utils, writeFile } from 'xlsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as XLSX from 'xlsx';\nimport autoTable from 'jspdf-autotable';\n\n\nconst App = () => {\n  const [report, setReport] = useState(null);\n  var jsonData={};\n\n  const generateReport = async (inputData) => {\n      console.log(inputData);\n      const response = await fetch('https://elevatu.pythonanywhere.com/?input=' + inputData)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.text();\n      })\n      .then(text => {\n        text = text.replace(/'/g, '\"');\n        jsonData = JSON.parse(text);\n        previewReport(jsonData)\n        const btn_preview = document.getElementById('btn_preview');\n        const btn_pdf = document.getElementById('btn_pdf');\n        const btn_xls = document.getElementById('btn_xls');\n        btn_preview.style.visibility='visible';\n        btn_preview.style.visibility='visible';\n      \n      })\n      .catch(error => {\n        console.error('There was a problem in generating report.', error);\n      });\n  };\n\n  const previewReport = () => {\n    const doc = new jsPDF();\n    const columns = Object.keys(jsonData[0]).map(key => ({ header: key, dataKey: key }));\n    const rows = jsonData.map(item => {\n      const row = {};\n      Object.keys(item).forEach(key => {\n          row[key] = item[key];\n      });\n      return row;\n    });\n    autoTable(doc, {\n      head: [columns.map(col => col.header)],\n      body: rows,\n      columns,\n    });\n    const pdfBlob = doc.output('blob');\n    const pdfUrl = URL.createObjectURL(pdfBlob);\n    const popup = window.open(pdfUrl, '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\n    if (popup) {\n        popup.document.write('<html><head><title>Report Preview</title></head><body>');\n        popup.document.write('<iframe src=\"' + pdfUrl + '\" frameborder=\"0\" style=\"width:100%;height:100%;\"></iframe>');\n        popup.document.write('</body></html>');\n        popup.document.close(); // Important for IE\n    } else {\n        alert('Popup blocked. Please allow popups for this site.');\n    }\n  };\n\n  const formatDate = (date) => {\n    return date.toISOString().replace(/[-:.T]/g, '_').split('_')[0] + '_' + date.toTimeString().split(' ')[0].replace(/:/g, '_');\n  };\n  const now = new Date();\n  const formattedDate = formatDate(now);\n\n  const exportAsPDF = () => {\n    const doc = new jsPDF();\n    const columns = Object.keys(jsonData[0]).map(key => ({ header: key, dataKey: key }));\n    const rows = jsonData.map(item => {\n      const row = {};\n      Object.keys(item).forEach(key => {\n          row[key] = item[key];\n      });\n      return row;\n    });\n    autoTable(doc, {\n      head: [columns.map(col => col.header)],\n      body: rows,\n      columns,\n    });\n\n    doc.save('report' + formattedDate + '.pdf');\n  };\n\n  const exportAsExcel = () => {\n    const ws = XLSX.utils.json_to_sheet(jsonData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n    XLSX.writeFile(wb, 'report' + formattedDate + '.xlsx');\n  };\n\n  return (\n    <div className=\"d-flex flex-column min-vh-100\" style={{ backgroundColor: '#AAD7D9' }}>\n      <div class=\"top-strip\">\n            <h1 class=\"stylish-heading\">ReportXpress</h1>\n            <p>Intelligent Self Service Resports</p>\n       </div>\n      <div className=\"container text-center py-5\">\n        <UserInputForm\n          onGenerate={generateReport}\n          onPreview={previewReport}\n          onExportPDF={exportAsPDF}\n          onExportExcel={exportAsExcel}\n        />\n        {report && (\n          <div className=\"mt-4\">\n            <h2>Generated Report</h2>\n            <p>{report}</p>\n          </div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,SAAS,QAAQ,MAAM;AACvC,OAAO,sCAAsC;AAC7C,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,IAAIc,QAAQ,GAAC,CAAC,CAAC;EAEf,MAAMC,cAAc,GAAG,MAAOC,SAAS,IAAK;IACxCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,GAAGJ,SAAS,CAAC,CACrFK,IAAI,CAACF,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDH,IAAI,CAACG,IAAI,IAAI;MACZA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MAC9BX,QAAQ,GAAGY,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;MAC3BI,aAAa,CAACd,QAAQ,CAAC;MACvB,MAAMe,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;MAC1D,MAAMC,OAAO,GAAGF,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MAClD,MAAME,OAAO,GAAGH,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MAClDF,WAAW,CAACK,KAAK,CAACC,UAAU,GAAC,SAAS;MACtCN,WAAW,CAACK,KAAK,CAACC,UAAU,GAAC,SAAS;IAExC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdpB,OAAO,CAACoB,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACnE,CAAC,CAAC;EACN,CAAC;EAED,MAAMT,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMU,GAAG,GAAG,IAAInC,KAAK,CAAC,CAAC;IACvB,MAAMoC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAAC3B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC4B,GAAG,CAACC,GAAG,KAAK;MAAEC,MAAM,EAAED,GAAG;MAAEE,OAAO,EAAEF;IAAI,CAAC,CAAC,CAAC;IACpF,MAAMG,IAAI,GAAGhC,QAAQ,CAAC4B,GAAG,CAACK,IAAI,IAAI;MAChC,MAAMC,GAAG,GAAG,CAAC,CAAC;MACdR,MAAM,CAACC,IAAI,CAACM,IAAI,CAAC,CAACE,OAAO,CAACN,GAAG,IAAI;QAC7BK,GAAG,CAACL,GAAG,CAAC,GAAGI,IAAI,CAACJ,GAAG,CAAC;MACxB,CAAC,CAAC;MACF,OAAOK,GAAG;IACZ,CAAC,CAAC;IACFzC,SAAS,CAAC+B,GAAG,EAAE;MACbY,IAAI,EAAE,CAACX,OAAO,CAACG,GAAG,CAACS,GAAG,IAAIA,GAAG,CAACP,MAAM,CAAC,CAAC;MACtCQ,IAAI,EAAEN,IAAI;MACVP;IACF,CAAC,CAAC;IACF,MAAMc,OAAO,GAAGf,GAAG,CAACgB,MAAM,CAAC,MAAM,CAAC;IAClC,MAAMC,MAAM,GAAGC,GAAG,CAACC,eAAe,CAACJ,OAAO,CAAC;IAC3C,MAAMK,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACL,MAAM,EAAE,QAAQ,EAAE,mDAAmD,CAAC;IAChG,IAAIG,KAAK,EAAE;MACPA,KAAK,CAAC5B,QAAQ,CAAC+B,KAAK,CAAC,wDAAwD,CAAC;MAC9EH,KAAK,CAAC5B,QAAQ,CAAC+B,KAAK,CAAC,eAAe,GAAGN,MAAM,GAAG,6DAA6D,CAAC;MAC9GG,KAAK,CAAC5B,QAAQ,CAAC+B,KAAK,CAAC,gBAAgB,CAAC;MACtCH,KAAK,CAAC5B,QAAQ,CAACgC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM;MACHC,KAAK,CAAC,mDAAmD,CAAC;IAC9D;EACF,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,OAAOA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACzC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC0C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGF,IAAI,CAACG,YAAY,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC1C,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAC9H,CAAC;EACD,MAAM4C,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,aAAa,GAAGP,UAAU,CAACK,GAAG,CAAC;EAErC,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMlC,GAAG,GAAG,IAAInC,KAAK,CAAC,CAAC;IACvB,MAAMoC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAAC3B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC4B,GAAG,CAACC,GAAG,KAAK;MAAEC,MAAM,EAAED,GAAG;MAAEE,OAAO,EAAEF;IAAI,CAAC,CAAC,CAAC;IACpF,MAAMG,IAAI,GAAGhC,QAAQ,CAAC4B,GAAG,CAACK,IAAI,IAAI;MAChC,MAAMC,GAAG,GAAG,CAAC,CAAC;MACdR,MAAM,CAACC,IAAI,CAACM,IAAI,CAAC,CAACE,OAAO,CAACN,GAAG,IAAI;QAC7BK,GAAG,CAACL,GAAG,CAAC,GAAGI,IAAI,CAACJ,GAAG,CAAC;MACxB,CAAC,CAAC;MACF,OAAOK,GAAG;IACZ,CAAC,CAAC;IACFzC,SAAS,CAAC+B,GAAG,EAAE;MACbY,IAAI,EAAE,CAACX,OAAO,CAACG,GAAG,CAACS,GAAG,IAAIA,GAAG,CAACP,MAAM,CAAC,CAAC;MACtCQ,IAAI,EAAEN,IAAI;MACVP;IACF,CAAC,CAAC;IAEFD,GAAG,CAACmC,IAAI,CAAC,QAAQ,GAAGF,aAAa,GAAG,MAAM,CAAC;EAC7C,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,EAAE,GAAGrE,IAAI,CAACF,KAAK,CAACwE,aAAa,CAAC9D,QAAQ,CAAC;IAC7C,MAAM+D,EAAE,GAAGvE,IAAI,CAACF,KAAK,CAAC0E,QAAQ,CAAC,CAAC;IAChCxE,IAAI,CAACF,KAAK,CAAC2E,iBAAiB,CAACF,EAAE,EAAEF,EAAE,EAAE,QAAQ,CAAC;IAC9CrE,IAAI,CAACD,SAAS,CAACwE,EAAE,EAAE,QAAQ,GAAGN,aAAa,GAAG,OAAO,CAAC;EACxD,CAAC;EAED,oBACE9D,OAAA;IAAKuE,SAAS,EAAC,+BAA+B;IAAC9C,KAAK,EAAE;MAAE+C,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,gBACnFzE,OAAA;MAAK0E,KAAK,EAAC,WAAW;MAAAD,QAAA,gBAChBzE,OAAA;QAAI0E,KAAK,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7C9E,OAAA;QAAAyE,QAAA,EAAG;MAAiC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACP9E,OAAA;MAAKuE,SAAS,EAAC,4BAA4B;MAAAE,QAAA,gBACzCzE,OAAA,CAACR,aAAa;QACZuF,UAAU,EAAEzE,cAAe;QAC3B0E,SAAS,EAAE7D,aAAc;QACzB8D,WAAW,EAAElB,WAAY;QACzBmB,aAAa,EAAEjB;MAAc;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,EACD3E,MAAM,iBACLH,OAAA;QAAKuE,SAAS,EAAC,MAAM;QAAAE,QAAA,gBACnBzE,OAAA;UAAAyE,QAAA,EAAI;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB9E,OAAA;UAAAyE,QAAA,EAAItE;QAAM;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN9E,OAAA,CAACP,MAAM;MAAAkF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC5E,EAAA,CAhHID,GAAG;AAAAkF,EAAA,GAAHlF,GAAG;AAkHT,eAAeA,GAAG;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}